# 레모네이드 생활 코드를 이용하여 텐서플로우 활용 및 

[1]
!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf
 # 구글 코랩 환경에서 글자 깨짐 현상을 방지하기 위해 사용
 
[2]
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
%matplotlib inline
plt.rc('font', family = 'NanumBarunGothic')
 # 필요한 라이브러리들 import

[3]
df = pd.read_csv('anal.csv', encoding='cp949')
df.info()
print('\n')
df.isnull().sum()
 # 데이터 프레임 구축 및 결측치 확인

[4]
plt.title('재해자 수 대비 사망자 수')
plt.scatter(df['재해자수 (명)'], df['사망자수 (명)'])
plt.xlabel('재해자 수 (명)', fontsize=13)
plt.ylabel('사망자 수 (명)', fontsize=13)
plt.show()
 # 재해자 수와 사망자 수 간의 산점도

[5]
sns.lmplot(x='재해자수 (명)', y='사망자수 (명)', data=df)
plt.title('재해자 수 대비 사망자 수')
plt.show()
 # lmplot을 이용하여 재해자 수와 사망자 수의 산점도와 추세선 표시
 
[6] 
a = sns.scatterplot(x='재해자수 (명)', y='사망자수 (명)', hue='산업중분류별(1)', data=df)
a.legend(bbox_to_anchor=(1.0, 0.5))
plt.show()
 # seaborn 라이브러리를 이용한 산점도 시각화

[7]
new_df = df.iloc[:, [3, 4]]
new_df.info()
new_df.head(5)
 # 재해자 수와 사망자 수만 슬라이싱

---------------------------------------------------

# 레모네이드 생활 코드를 이용한 텐서플로우 사용

[8]
import tensorflow as tf
from tensorflow.keras import layers
import seaborn as sns

[9]
독립 = new_df[['재해자수 (명)']]
종속 = new_df[['사망자수 (명)']]
print(독립.shape, 종속.shape)

[10]
X = tf.keras.layers.Input(shape=[1])
Y = tf.keras.layers.Dense(1)(X)
model = tf.keras.models.Model(X, Y)
model.compile(loss='mse')

[11]
model.fit(독립, 종속, epochs=10)
model.fit(독립, 종속, epochs=1000, verbose=0)
model.fit(독립, 종속, epochs=10)
model.fit(독립, 종속, epochs=10000, verbose=0)
model.fit(독립, 종속, epochs=10)

[12]
df.max()
print(model.predict([[13000000]]))
print(model.predict([[1700]]))

[13]
df.set_index(['산업중분류별(1)'],inplace = True)
df

three = df.loc[['기타의사업', '제조업', '건설업'], :]
three.index

a = sns.scatterplot(x='재해자수 (명)', y='사망자수 (명)', hue='산업중분류별(1)', data=three)
a.legend(bbox_to_anchor=(1.0, 0.5))
plt.title('특정 세 산업의 재해자 수와 사망자 수')
plt.show()

import tensorflow as tf
from tensorflow.keras import layers
import seaborn as sns

독립 = three[['재해자수 (명)']]
종속 = three[['사망자수 (명)']]
print(독립.shape, 종속.shape)

X = tf.keras.layers.Input(shape=[1])
Y = tf.keras.layers.Dense(1)(X)
model = tf.keras.models.Model(X, Y)
model.compile(loss='mse')

model.fit(독립, 종속, epochs=10)

model.fit(독립, 종속, epochs=10000, verbose=0)

model.fit(독립, 종속, epochs=10)

model.fit(독립, 종속, epochs=10000, verbose=0)

model.fit(독립, 종속, epochs=10)

manu = df.loc[['제조업'], :]
manu.index

other 

manu

import tensorflow as tf
from tensorflow.keras import layers
import seaborn as sns

독립 = manu[['사망자수 (명)']]
종속 = manu[['재해자수 (명)']]
print(독립.shape, 종속.shape)

X = tf.keras.layers.Input(shape=[1])
Y = tf.keras.layers.Dense(1)(X)
model = tf.keras.models.Model(X, Y)
model.compile(loss='mse')

model.fit(독립, 종속, epochs=10)
